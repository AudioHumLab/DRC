roommeasure.py

    Gets the stationary frequency response from an in-rooom loudspeaker,
    from several microphone locations.

    The resulting files for every CHannel are as follow:

    'CH_room_N.frd'             Measured response at mic location #N.
    'CH_room_avg.frd'           Average response from all mic locations.
    'CH_room_avg_smoothed.frd'  Average smoothed 1/24 oct below Schroeder freq,
                                then progressively smoothed up to 1/1 oct at Nyquist.

    Usage:

        roommeasure.py  [options ... ...]

         -h                 This help

         -m=N               Number of mic locations per channel.
                            (default 2 mic takes)

         -e=XX              Power of two 2^XX to set the log-sweep length.
                            (default 2^17 == 128 K samples ~ 2 s at fs 48KHz)

         -c=X               Channel id:  L | R | LR
                            This id will form the avobe .frd filename prefix.
                            'LR' allows the measurements of both channels
                            to be interleaved at a microphone location.
                            (default 'C' will be used as filename prefix)

         -s=XXX             Shroeder freq, influences the smoothing transition
                            for the resulting smoothed freq response file.
                            (default 200 Hz)

         -dev=cap,pbk,fs    Capture and playback devices and Fs to use
                            (Choose the right ones by checking logsweep2TF.py -h)


                            USER INTERACTION:

         -timer=N           Auto Timer N seconds between measurements
                            (default is 0, then will promt the user to press ENTER)

         -nobeep            Avoids beep alerting during measuring location changes.


                            REMOTE MACHINE JACK MANAGER:

         -jip=IP            remote IP
         -juser=uname       remote username



    IMPORTANT:

    Please do a preliminary test by using logsweep2TF.py, in order to verify:

    - The sound card does not loses samples, and levels are ok.

    - The measuremet is feasible (Time clearance) with the selected parameters.


    OPTIONAL:

    You can review the recorded responses by using audiotools/FRD_viewer.py:

        FRD_tool.py $(ls L_room_?.frd)
        FRD_tool.py $(ls L_room_?.frd) -24oct -f0=200  # FRD_tool can smooth
